/* .prof-title {
    font-family: 'Roboto';
    font-size: 1.6rem;
    font-weight: 500;
  }

  @media screen and (min-width: 310px) and (max-width: 520px) {
    .header-row {
      display: flex;
      flex-direction: row;
      align-items: left;
      justify-content: space-between;
      position: relative;
      background-color: transparent;
    }
    .prof-title{
        color: var(--mainDark);
        font-size: 1.5rem;
        width: 80%;
        padding-top: 5%;
    }
    .profile-icon{
        background-color: transparent;
    }
    .info-msg{
        color: var(--mainDark);
        text-align: center;
        font-family: 'Roboto', sans-serif;
        font-size: .8rem !important;
        line-height: 1.4rem;
        font-weight: 400;
    }
    .reg-form {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: center;
        align-content: flex-start;
        margin: auto;
        padding: 5%;
    }
    
    .inputs {
        width: 80vw;
        padding: 5%;
        margin: 5%;
        margin-left: -15%;
    }

}
  

@media screen and (min-width: 200px) and (max-width: 310px) {
    .header-row {
        display: flex;
        padding-bottom: 50%;
        flex-direction: row;
        align-items: left;
        justify-content: space-between;
        position: relative;
        background-color: transparent;
      }
      .prof-title{
        color: var(--mainDark);
        font-size: 1.2rem;
        width: 80%;
        padding-top: 3%;
    }
    .profile-icon{
        background-color: transparent;
        margin-top: -65%;
        padding-bottom: 10%;
    }
    .info-msg{
        color: var(--mainDark);
        text-align: center;
        font-family: 'Roboto', sans-serif;
        font-size: .6rem !important;
        font-weight: 400;
    }
    .month-btn{
        margin: 0 !important;
        font-size: .7rem !important;
    }
    .qtr-btn{
        margin: 0 !important;
        font-size: .7rem !important;
    }
    .yr-btn{
        margin: 0 !important;
        font-size: .7rem !important;
    }
    .reg-form {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: center;
        align-content: flex-start;
        margin: auto;
        padding: 5%;
    }
    .inputs {
        width: 80vw;
        padding: 5%;
        margin: 5%;
        margin-left: -15%;
    }

}

@media screen and (min-width: 520px) and (max-width: 900px) {
    .header-row {
        display: flex;
        padding-bottom: 25%;
        flex-direction: row;
        align-items: left;
        justify-content: space-between;
        position: relative;
        background-color: transparent;
      }
    .prof-title{
        color: var(--mainDark);
        font-size: 1.5rem;
        width: 65%;
        padding-top: 7%;
    }
    .close-icon{
        padding-left: 2%;
    }
    .profile-icon{
        background-color: transparent;
        margin-top: -40%;
        padding-bottom: 15%;
    }
    .info-msg{
        color: var(--mainDark);
        text-align: center;
        font-family: 'Roboto', sans-serif;
        font-size: .8rem !important;
        line-height: 1.4rem;
        font-weight: 400;
    }
    .month-btn{
        margin: 0 !important;
    }
    .reg-form {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: center;
        align-content: flex-start;
        margin: auto;
        padding: 5%;
    }
    .inputs {
        width: 80vw;
        padding: 3%;
        margin: 3%;
        margin-left: -15%;
    }

}

@media screen and (min-width: 900px) and (max-width: 1800px) {
    .header-row {
        display: flex;
        padding-bottom: 25%;
        flex-direction: row;
        align-items: left;
        justify-content: space-between;
        position: relative;
        background-color: transparent;
      }
    .prof-title{
        color: var(--mainDark);
        font-size: 1.5rem;
        width: 60%;
        padding-top: 7%;
    }
    .close-icon{
        padding-left: 2%;
    }
    .profile-icon{
        background-color: transparent;
        margin-top: -35%;
        padding-bottom: 15%;
    }
    .info-msg{
        color: var(--mainDark);
        text-align: center;
        font-family: 'Roboto', sans-serif;
        font-size: .8rem !important;
        line-height: 1.4rem;
        font-weight: 400;
    }
    .month-btn{
        margin: 0 !important;
    }
    .reg-form {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-items: center;
        align-content: flex-start;
        margin: auto;
        padding: 5%;
    }
    .inputs {
        width: 80vw;
        padding: 3%;
        margin: 3%;
        margin-left: -15%;
    }

} */

// if(!membership_type){
    //         let confirm = window.confirm('please select a membership plan to continue')
    //     }

    // const checkEmail = () => {         
    //     var pattern = new RegExp(/^[0-9a-zA-Z]+([0-9a-zA-Z]*[-._+])*[0-9a-zA-Z]+@[0-9a-zA-Z]+([-.][0-9a-zA-Z]+)*([0-9a-zA-Z]*[.])[a-zA-Z]{2,6}$/);         
    //     return pattern.test(loginInfo.email);     
    // }    
    //must start with a letter or number containing as many as it wants can also have a - . _ or + but ending with a letter or number before the @ symbol, then will start with a letter or number can have a - or . eventually followed by a . with a letter at the end between 2 to 6 characters in length         
        
    // const checkPassword = () => {        
    //     var reg = new RegExp(/^(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[^\w\d\s:])([^\s]){8,16}$/);         
    //     return reg.test(loginInfo.password);     
    // }
    //must contain at least 1 number, 1 capital letter, 1 lower case letter and one special character  

    /* <form
                    className='reg-form'
                    onSubmit={onSignUp}>

                        <input 
                        className='emailInput inputs'
                        type='text'
                        placeholder='email'
                        onChange={(e)=>setEmail(e.target.value)}
                        />

                        <input 
                        className='passwordInput inputs'
                        type='password'
                        placeholder='password'
                        onChange={(e)=>setPassword(e.target.value)}
                        />

                        <input
                        className='first_nameInput inputs'
                        type='text'
                        placeholder='First Name'
                        onChange={(e)=>setfirst_name(e.target.value)}
                        />

                        <input
                        className='last_nameInput inputs'
                        type='text'
                        placeholder='Last Name'
                        onChange={(e)=>setlast_name(e.target.value)}
                        />

                        <input
                        className='birthdayInput inputs'
                        type='date'
                        placeholder='Birthday'
                        onChange={(e)=>setBirthday(e.target.value)}
                        />

                    
                        <ButtonContainer 
                        className="email-btn">
                        Submit
                        </ButtonContainer>
                      
                        
                </form> */